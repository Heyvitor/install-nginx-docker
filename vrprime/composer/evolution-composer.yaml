services:
  evolution-api:
    image: atendai/evolution-api:$EVOLUTION_VERSION
    restart: always
    volumes:
      - evolution-instances:/evolution/instances
    environment:
      - SERVER_URL=https://$SERVER_URL
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=$AUTHENTICATION_API_KEY
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - LANGUAGE=en
      - CONFIG_SESSION_PHONE_CLIENT=Windows
      - CONFIG_SESSION_PHONE_NAME=Firefox
      - TELEMETRY=false
      - TELEMETRY_URL=
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - DATABASE_CONNECTION_URI=postgres://postgresql:$POSTGRES_PASSWORD@evolution-postgres:5432/evolution
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=true
      - DATABASE_SAVE_MESSAGE_UPDATE=true
      - DATABASE_SAVE_DATA_CONTACTS=true
      - DATABASE_SAVE_DATA_CHATS=true
      - DATABASE_SAVE_DATA_LABELS=true
      - DATABASE_SAVE_DATA_HISTORIC=true
      - CACHE_REDIS_ENABLED=true
      - CACHE_REDIS_URI=redis://evolution-redis:6379
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=true
      - CHATWOOT_ENABLED=true
      - CHATWOOT_MESSAGE_READ=true
      - CHATWOOT_MESSAGE_DELETE=true
      - CHATWOOT_IMPORT_DATABASE_CONNECTION_URI=postgres://postgresql:$POSTGRES_PASSWORD@evolution-postgres:5432/evolution
    ports:
      - "$EVOLUTION_PORT:8080"
    env_file:
      - .env
    depends_on:
      evolution-postgres:
        condition: service_healthy
      evolution-redis:
        condition: service_started
    command: >
      sh -c "until pg_isready -h evolution-postgres -p 5432 -U postgresql; do
               echo 'Aguardando PostgreSQL...'; sleep 2;
             done &&
             until redis-cli -h evolution-redis ping; do
               echo 'Aguardando Redis...'; sleep 2;
             done &&
             npm run db:deploy && npm start"

  evolution-postgres:
    image: postgres:16-alpine
    restart: always
    volumes:
      - evolution-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=evolution
      - POSTGRES_USER=postgresql
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgresql"]
      interval: 5s
      timeout: 5s
      retries: 5

  evolution-redis:
    image: redis:alpine
    restart: always
    volumes:
      - evolution-redis-data:/data
    env_file:
      - .env

networks:
  dokploy-network:
    external: true

volumes:
  evolution-instances:
  evolution-postgres-data:
  evolution-redis-data: